<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>椛狩りの季節</title>
        <link>https://mapleblanc46.github.io/</link>
        <description>Recent content on 椛狩りの季節</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ja</language>
        <lastBuildDate>Sat, 28 Jun 2025 18:08:26 +0900</lastBuildDate><atom:link href="https://mapleblanc46.github.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>画像が横向きになるのはEXIFのせい</title>
        <link>https://mapleblanc46.github.io/p/memo_exif/</link>
        <pubDate>Sat, 28 Jun 2025 18:08:26 +0900</pubDate>
        
        <guid>https://mapleblanc46.github.io/p/memo_exif/</guid>
        <description>&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://mapleblanc46.github.io/p/ryokou202506/&#34; &gt;旅行の記事&lt;/a&gt;を書いてるときに、画像を添付すると横転してしまった。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;![飛翔跡地](hishou_exif.jpg)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://mapleblanc46.github.io/p/memo_exif/hishou_exif.jpg&#34;
	width=&#34;4096&#34;
	height=&#34;3072&#34;
	srcset=&#34;https://mapleblanc46.github.io/p/memo_exif/hishou_exif_hu_4930c660c227198f.jpg 480w, https://mapleblanc46.github.io/p/memo_exif/hishou_exif_hu_55d4f0b7334cb3ef.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;飛翔跡地&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;どうやらExifという形式のメタデータを画像に埋め込んでるらしい。
&lt;a class=&#34;link&#34; href=&#34;https://ja.wikipedia.org/wiki/Exchangeable_image_file_format&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Exchangeable image file format（Exif） - Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://exiftool.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;exiftool&lt;/a&gt;というツールに画像をぶち込むと以下のような情報が見られる。
画像としては横転してる状態が正なのを、スマホ上のビューワーなどではExifの &lt;code&gt;Orientation&lt;/code&gt; というタグを読み込んでよしなに表示してくれている。
&lt;code&gt;Orientation                     : Rotate 90 CW&lt;/code&gt; が時計回りに90°回転するってことらしい。(ClockWise？)&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://mapleblanc46.github.io/p/memo_exif/exif_cli.jpg&#34; width=&#34;90%&#34;&gt;
&lt;/figure&gt;

&lt;p&gt;Stackの &lt;code&gt;![Image 1](1.jpg)&lt;/code&gt; っていうGallery Syntaxはこの &lt;code&gt;Orientation&lt;/code&gt; を無視するのかしらね。&lt;br&gt;
というわけで、この情報を書き換える方法を探すとチャッピーがImageMagickというパッケージを教えてくれた。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;convert &amp;lt;対象ファイル名&amp;gt; -auto-orient &amp;lt;操作後のファイル名&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;この &lt;code&gt;-auto-orient&lt;/code&gt; というオプションが、 &lt;code&gt;Orientation&lt;/code&gt; タグの向きに画像を回転させつつ、&lt;code&gt;Orientation&lt;/code&gt; タグの情報を &lt;code&gt;Horizontal (normal)&lt;/code&gt; にしてくれる。&lt;/p&gt;
&lt;p&gt;先の記事ではスマホで撮った画像を大量に使用しているので、一つ一つ画像に &lt;code&gt;convert&lt;/code&gt; を適応していくのはちと面倒じゃ。というわけでディレクトリ内の画像を一括処理できるスクリプトを用意する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 対象ディレクトリ（必要に応じて変更）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;TARGET_DIR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# JPG/JPEG/PNG を対象に一括処理&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; img in &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$TARGET_DIR&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;/*.&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;jpg,jpeg,png&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; -e &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$img&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# ファイルが存在しない場合スキップ&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  sudo convert &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$img&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; -auto-orient &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$img&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;ちゃっぴーくんは便利だなぁ。ローカルのHugo用ディレクトリに上記のスクリプトを配置してコマンドを実行すれば一括で処理してくれる。
これで、&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;記事を書く(画像を入れる部分はプレースホルダにしておく)&lt;/li&gt;
&lt;li&gt;使いたい画像を記事ディレクトリにぶちこむ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./convert.sh ./content/post/&amp;lt;対象ディレクトリ&amp;gt;&lt;/code&gt; を実行&lt;/li&gt;
&lt;li&gt;画像の表示サイズやキャプションを調整する&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;という流れを作れた。こういうのは習慣化するのが大事なんだよね。そのためには極力抵抗となる部分を減らして、取り組むための活性化エネルギーを小さくするの。アウトプットは気軽にサクッと、インプットするたびにやっていきたいね。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;今記事書いてて気づいたけど、この記法だとExifをいじらなくても横転しない。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{&amp;lt; figure
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    src=&amp;#34;hishou_exif.jpg&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    caption=&amp;#34;飛翔跡地&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    width=&amp;#34;50%&amp;#34; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;figure&gt;&lt;img src=&#34;https://mapleblanc46.github.io/p/memo_exif/hishou_exif.jpg&#34;
    alt=&#34;飛翔跡地&#34; width=&#34;50%&#34;&gt;&lt;figcaption&gt;
      &lt;p&gt;飛翔跡地&lt;/p&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;StackのGallery表示で複数画像を横に並べる機能が使いたくてこんなことやってるけど、figureのshortcodeでも指定の仕方によっては実現できるのかな。気が向いたら今度調べてみるか。&lt;/p&gt;
&lt;p&gt;あと関連するコンテンツにGitHub_memoが表示されてるのもなんでだ？備忘録カテゴリーつけてるからかな？&lt;/p&gt;
</description>
        </item>
        <item>
        <title>一人旅って、自由ですか</title>
        <link>https://mapleblanc46.github.io/p/ryokou202506/</link>
        <pubDate>Wed, 25 Jun 2025 23:41:35 +0900</pubDate>
        
        <guid>https://mapleblanc46.github.io/p/ryokou202506/</guid>
        <description>&lt;p&gt;平日に三連休が生えてきたらもう旅行に行くしかないよね。&lt;br&gt;
というわけで、仕事終わりに夜行バスに乗り込み腰を痛めながら名古屋にやってきた。&lt;/p&gt;
&lt;h2 id=&#34;名古屋-弾着&#34;&gt;名古屋 弾着
&lt;/h2&gt;&lt;figure&gt;&lt;img src=&#34;https://mapleblanc46.github.io/p/ryokou202506/hishou.jpg&#34;
    alt=&#34;飛翔跡地&#34; width=&#34;50%&#34;&gt;&lt;figcaption&gt;
      &lt;p&gt;飛翔跡地&lt;/p&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;撤去されてからもう何年も経つってのに、あのクソデカモニュメントがない名駅は不思議な感じがするな。東口を頻繁に使ってたわけじゃないけどそれでもなんだかものさみしいわね。リニアが開通したらもっと気楽に来られるようになるのかしら。&lt;/p&gt;
&lt;p&gt;そんな感傷に浸りながらコメダで腹ごしらえ。夜行バスでまともに眠れるわけがないんだから、カフェインでブーストしていくぜ。シロノワールは温かさと冷たさが混ざり合う感覚がたまらないんだよね。ダイス状のキットカットもアクセントになってておいしい。朝から甘未を補充できて満足。&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://mapleblanc46.github.io/p/ryokou202506/komeda.jpg&#34; width=&#34;50%&#34;&gt;
&lt;/figure&gt;

&lt;p&gt;エネルギー補給を済ませたところで本命の名鉄シングレコラボに向かう。午後にはウマ娘好きの友人とスイパラで合流した後に笠松へ向かう予定だったので、先にスタンプを埋めておこうと太田川から回っていく。キャラの数合わせだとは思うけどなぜ太田川と刈谷なのですか……乗り換え増えてちと面倒じゃった&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mapleblanc46.github.io/p/ryokou202506/beruno.jpg&#34;
	width=&#34;2378&#34;
	height=&#34;4096&#34;
	srcset=&#34;https://mapleblanc46.github.io/p/ryokou202506/beruno_hu_2a8366264c9412b2.jpg 480w, https://mapleblanc46.github.io/p/ryokou202506/beruno_hu_db3662182d8a317f.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;真正面のベルノなんか凄味がある…&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;58&#34;
		data-flex-basis=&#34;139px&#34;
	
&gt; &lt;img src=&#34;https://mapleblanc46.github.io/p/ryokou202506/maruzen.jpg&#34;
	width=&#34;3072&#34;
	height=&#34;4096&#34;
	srcset=&#34;https://mapleblanc46.github.io/p/ryokou202506/maruzen_hu_e5371cd6fb79d11d.jpg 480w, https://mapleblanc46.github.io/p/ryokou202506/maruzen_hu_e727890d3bbb9603.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;太田川のマルゼン&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;75&#34;
		data-flex-basis=&#34;180px&#34;
	
&gt; &lt;img src=&#34;https://mapleblanc46.github.io/p/ryokou202506/tamamo.jpg&#34;
	width=&#34;3072&#34;
	height=&#34;4096&#34;
	srcset=&#34;https://mapleblanc46.github.io/p/ryokou202506/tamamo_hu_463ce5d895f04563.jpg 480w, https://mapleblanc46.github.io/p/ryokou202506/tamamo_hu_1576996df65b4218.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;刈谷のタマモ&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;75&#34;
		data-flex-basis=&#34;180px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;中京競馬場&#34;&gt;中京競馬場
&lt;/h2&gt;&lt;p&gt;そして名駅に帰る道中くっっっっそ熱い中(notTypo)中京競馬場に向かう。&lt;br&gt;
平日ど真ん中なので外側をぐるっと回るくらいしかできなかったけど、それでもスズカ広場や歴代優勝馬の碑を見られてよかったなぁ。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mapleblanc46.github.io/p/ryokou202506/rudorufu.jpg&#34;
	width=&#34;3072&#34;
	height=&#34;4096&#34;
	srcset=&#34;https://mapleblanc46.github.io/p/ryokou202506/rudorufu_hu_f7ef23a95d3ea2de.jpg 480w, https://mapleblanc46.github.io/p/ryokou202506/rudorufu_hu_40274ebd62bdc350.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;ｶｲﾁｮｰ&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;75&#34;
		data-flex-basis=&#34;180px&#34;
	
&gt; &lt;img src=&#34;https://mapleblanc46.github.io/p/ryokou202506/hashira_oguri.jpg&#34;
	width=&#34;3072&#34;
	height=&#34;4096&#34;
	srcset=&#34;https://mapleblanc46.github.io/p/ryokou202506/hashira_oguri_hu_18161f857a5508b2.jpg 480w, https://mapleblanc46.github.io/p/ryokou202506/hashira_oguri_hu_26fbdd7d1ebc564e.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;75&#34;
		data-flex-basis=&#34;180px&#34;
	
&gt; &lt;img src=&#34;https://mapleblanc46.github.io/p/ryokou202506/hashira_ma-chi.jpg&#34;
	width=&#34;3072&#34;
	height=&#34;4096&#34;
	srcset=&#34;https://mapleblanc46.github.io/p/ryokou202506/hashira_ma-chi_hu_390ee200b45d5560.jpg 480w, https://mapleblanc46.github.io/p/ryokou202506/hashira_ma-chi_hu_73708a7eb02ec390.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;75&#34;
		data-flex-basis=&#34;180px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mapleblanc46.github.io/p/ryokou202506/entrance.jpg&#34;
	width=&#34;3072&#34;
	height=&#34;4096&#34;
	srcset=&#34;https://mapleblanc46.github.io/p/ryokou202506/entrance_hu_4c69dbe130a58995.jpg 480w, https://mapleblanc46.github.io/p/ryokou202506/entrance_hu_d02adb282506bd83.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;75&#34;
		data-flex-basis=&#34;180px&#34;
	
&gt; &lt;img src=&#34;https://mapleblanc46.github.io/p/ryokou202506/building.jpg&#34;
	width=&#34;3072&#34;
	height=&#34;4096&#34;
	srcset=&#34;https://mapleblanc46.github.io/p/ryokou202506/building_hu_8ea4ae3f436e6815.jpg 480w, https://mapleblanc46.github.io/p/ryokou202506/building_hu_4945b5aa56342c37.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;75&#34;
		data-flex-basis=&#34;180px&#34;
	
&gt; &lt;img src=&#34;https://mapleblanc46.github.io/p/ryokou202506/suzuka.jpg&#34;
	width=&#34;3072&#34;
	height=&#34;4096&#34;
	srcset=&#34;https://mapleblanc46.github.io/p/ryokou202506/suzuka_hu_f025b29c2f9da97.jpg 480w, https://mapleblanc46.github.io/p/ryokou202506/suzuka_hu_b39c8d0a1d3c36dd.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;75&#34;
		data-flex-basis=&#34;180px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;名古屋に戻ってくる&#34;&gt;名古屋に戻ってくる
&lt;/h2&gt;&lt;p&gt;疲れた体にこの世で一番うまい汁無し担々麺を流し込み、スイパラに向かう。&lt;br&gt;
らーめん六弦の汁無し担々麺が一番うまいんだから。残った汁にごはんをぶっこむ〆はいずれがんにも効くようになる。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mapleblanc46.github.io/p/ryokou202506/mugen-1.jpg&#34;
	width=&#34;3072&#34;
	height=&#34;4096&#34;
	srcset=&#34;https://mapleblanc46.github.io/p/ryokou202506/mugen-1_hu_42a550962b098783.jpg 480w, https://mapleblanc46.github.io/p/ryokou202506/mugen-1_hu_80ed5e2b4ecd674c.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;75&#34;
		data-flex-basis=&#34;180px&#34;
	
&gt; &lt;img src=&#34;https://mapleblanc46.github.io/p/ryokou202506/cb-1.jpg&#34;
	width=&#34;3072&#34;
	height=&#34;4096&#34;
	srcset=&#34;https://mapleblanc46.github.io/p/ryokou202506/cb-1_hu_ea6457e7456675ee.jpg 480w, https://mapleblanc46.github.io/p/ryokou202506/cb-1_hu_89fc1ad28842f4c1.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;75&#34;
		data-flex-basis=&#34;180px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;タマモプレートが一番見た目は可愛かったな。ただあの青いゼリー味が無くて不思議な気分に。&lt;br&gt;
ルドルフ推しの友人は嗚咽を漏らしながら最中を食べててうけるな。スイパラは小麦粉もの食べてるとすぐにおなか一杯になっちゃうからムースをメインにするべし。
てかスイパラコラボのベルノめちゃくちゃ可愛くないか？？？？アニメのベルノもかなり好きだったけどこっちもよきだ……&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mapleblanc46.github.io/p/ryokou202506/zenbu-1.jpg&#34;
	width=&#34;3072&#34;
	height=&#34;4096&#34;
	srcset=&#34;https://mapleblanc46.github.io/p/ryokou202506/zenbu-1_hu_de5b30bf5e1ce23.jpg 480w, https://mapleblanc46.github.io/p/ryokou202506/zenbu-1_hu_4aa628b98719880b.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;75&#34;
		data-flex-basis=&#34;180px&#34;
	
&gt; &lt;img src=&#34;https://mapleblanc46.github.io/p/ryokou202506/tamamoplate-1.jpg&#34;
	width=&#34;3072&#34;
	height=&#34;4096&#34;
	srcset=&#34;https://mapleblanc46.github.io/p/ryokou202506/tamamoplate-1_hu_11822cb2947d19b8.jpg 480w, https://mapleblanc46.github.io/p/ryokou202506/tamamoplate-1_hu_e885bfce5a7a8de0.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;75&#34;
		data-flex-basis=&#34;180px&#34;
	
&gt; &lt;img src=&#34;https://mapleblanc46.github.io/p/ryokou202506/shuugou-1.jpg&#34;
	width=&#34;4096&#34;
	height=&#34;3072&#34;
	srcset=&#34;https://mapleblanc46.github.io/p/ryokou202506/shuugou-1_hu_ccd2b42d9e23bf26.jpg 480w, https://mapleblanc46.github.io/p/ryokou202506/shuugou-1_hu_3331e8ff6bbdc01f.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;そして笠松へ&#34;&gt;そして笠松へ
&lt;/h2&gt;&lt;p&gt;もう陽も落ちてだいぶ暗くなってたけどまだまだ暑かったなぁ。&lt;br&gt;
室内観客席(?)は空いていてなんとか涼むことができたし、ちょうど船橋競馬の中継をしていた。時間がなかったから実況中継はあきらめてOPで出てきた橋に向かう途中にも、見たことのある景色がたくさんでオタク心がくすぐられるくすぐられる。特にOPはじめに出てくる物見やぐら(あれなんだ?)がいっちゃんテンション上がる↑↑↑↑。ドロスが聞こえてくるのも空耳じゃないね。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mapleblanc46.github.io/p/ryokou202506/eki-1.jpg&#34;
	width=&#34;3072&#34;
	height=&#34;4096&#34;
	srcset=&#34;https://mapleblanc46.github.io/p/ryokou202506/eki-1_hu_6d32088dd79671cd.jpg 480w, https://mapleblanc46.github.io/p/ryokou202506/eki-1_hu_b2432bfafab8add1.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;75&#34;
		data-flex-basis=&#34;180px&#34;
	
&gt; &lt;img src=&#34;https://mapleblanc46.github.io/p/ryokou202506/yagura-1.jpg&#34;
	width=&#34;2340&#34;
	height=&#34;4160&#34;
	srcset=&#34;https://mapleblanc46.github.io/p/ryokou202506/yagura-1_hu_a57a50348d1c8776.jpg 480w, https://mapleblanc46.github.io/p/ryokou202506/yagura-1_hu_7a6cedb470c231ab.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;56&#34;
		data-flex-basis=&#34;135px&#34;
	
&gt; &lt;img src=&#34;https://mapleblanc46.github.io/p/ryokou202506/keibajou-1.jpg&#34;
	width=&#34;3072&#34;
	height=&#34;4096&#34;
	srcset=&#34;https://mapleblanc46.github.io/p/ryokou202506/keibajou-1_hu_a8ff680849b11913.jpg 480w, https://mapleblanc46.github.io/p/ryokou202506/keibajou-1_hu_d1216138800ce1f4.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;75&#34;
		data-flex-basis=&#34;180px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;そもそも仕事終わりに夜行バスで愛知に来てからずっと活動していたので疲労はピークを迎えていた。さらに駅から微妙に遠い橋に向かってかってぇコンクリートを歩いてきたから足が棒だよ。カフェインとドーパミンだけで動いていた体を引きずって何とか駅に着き名古屋までは爆睡。寝過ごす前になんとか体を起こして友人に別れを告げる。疲労困憊で終わり散らかしてるけどまだ行くところがある、愛知で一番うまい豚骨ラーメン屋へ。&lt;/p&gt;
&lt;h2 id=&#34;駅西ラーメンをすこれ&#34;&gt;駅西ラーメンをすこれ！
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://mapleblanc46.github.io/p/ryokou202506/ekinishi-1.jpg&#34;
	width=&#34;4096&#34;
	height=&#34;3072&#34;
	srcset=&#34;https://mapleblanc46.github.io/p/ryokou202506/ekinishi-1_hu_d03350d0216d8a0f.jpg 480w, https://mapleblanc46.github.io/p/ryokou202506/ekinishi-1_hu_3d7c141f56a032d1.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt; &lt;img src=&#34;https://mapleblanc46.github.io/p/ryokou202506/menu-1.jpg&#34;
	width=&#34;4096&#34;
	height=&#34;3072&#34;
	srcset=&#34;https://mapleblanc46.github.io/p/ryokou202506/menu-1_hu_97c0eedd115a18e7.jpg 480w, https://mapleblanc46.github.io/p/ryokou202506/menu-1_hu_f19fe671f98cf9d3.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;このクリーミーな豚骨スープと香ばしいマー油に固めの細麺ストレートをくぐらせる喜びを知らない人は今すぐ食べに行ってほしい。名駅西口の雑然とした飲み屋街にひっそりとたたずむ店構えがたまらないんだ（店の外観を撮り忘れちゃったけど。そして沁みっ沁みのチャーシュー丼は惜しみなくタレがかかっており、濃い味好きの愛知県民を十分に満足させてくれる。ﾊﾔﾚ&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://mapleblanc46.github.io/p/ryokou202506/shuva-1.jpg&#34;
    alt=&#34;ｼｭｳﾞｧﾁ!!&#34; width=&#34;50%&#34;&gt;&lt;figcaption&gt;
      &lt;p&gt;ｼｭｳﾞｧﾁ!!&lt;/p&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;一度やってみたかったホテル飲み。そもそも旅行をあまりしてこなかった人生であり、合宿や社会人になってからの旅行も他人に宿取りを任せていたからとっても新鮮だぁ。本当はハーツクライのぬいを連れてくるつもりだったのにうっかり忘れちゃってた……幸いアニメイトにウマ娘のアクスタが売ってたから意を決してシュヴァちをお迎え。推しがたくさんいるとみんなほしくなっちゃうから我慢してたのになぁ。まぁシュヴァちと旅行できるしいっか！&lt;/p&gt;
&lt;p&gt;残り二日大阪で遊び倒してきた記録も付けたいけど慣れないマークダウンにつかれた……やる気があるときにちまちま書いてこ&lt;/p&gt;
</description>
        </item>
        <item>
        <title>GitHub_memo</title>
        <link>https://mapleblanc46.github.io/p/github_memo/</link>
        <pubDate>Wed, 16 Apr 2025 21:50:18 +0900</pubDate>
        
        <guid>https://mapleblanc46.github.io/p/github_memo/</guid>
        <description>&lt;h2 id=&#34;gitgithubの備忘録&#34;&gt;Git/Githubの備忘録
&lt;/h2&gt;&lt;h3 id=&#34;local-to-remote&#34;&gt;Local to Remote
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;GitHub上でリポジトリをあらかじめ作成しておくこと
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cd &amp;lt;対象ディレクトリ&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git init # ローカルリポジトリの作成
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git status # リポジトリの状態を確認
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add -A # ディレクトリ配下全てをステージングエリアに追加(コミットの予約)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git status
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &amp;#34;コミットの内容を入力&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git status
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git branch -m &amp;lt;新しいブランチ名&amp;gt; # ブランチ名を変更する
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# リモートブランチとの紐づけ
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git remote add &amp;lt;remote_repository_name&amp;gt; &amp;lt;remote_repository_URL&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ex: git remote add origin https://&amp;lt;user_name&amp;gt;:&amp;lt;access_token&amp;gt;@github.com/XX/XX.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# リモートブランチにアップロード(-u で上流ブランチを設定-&amp;gt;以降のpush,pullでブランチ名を指定しなくてよくなる)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push -u &amp;lt;repository_name&amp;gt; &amp;lt;local_branch_name&amp;gt;:&amp;lt;remote_branch_name&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ex: git push -u origin main
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;remote-to-local&#34;&gt;Remote to Local
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# デフォルトブランチをローカルにクローンする
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://&amp;lt;user_name&amp;gt;:&amp;lt;access_token&amp;gt;@github.com/XX/XX.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;ブランチ運用の流れ&#34;&gt;ブランチ運用の流れ
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 現在のブランチを確認
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git branch -a 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 現在のブランチがメインでなければ、mainに切り替えておく
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git checkout &amp;lt;branch_name&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# ローカルのブランチを最新にする
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# git push で -u を指定していれば　git pull のみで良い
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git pull &amp;lt;remote_repository_name&amp;gt; &amp;lt;branch_name&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 機能変更用のブランチを切る
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git checkout -b feature/&amp;lt;変更する内容に応じた命名&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# ローカルブランチでの変更内容をリモートブランチに適用
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add -A
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &amp;#34;コメント&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push origin feature/change
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# commit はファイルの変更をした時などにこまめにしておく
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# push は切りのいいタイミングでする
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;mainへのマージ&#34;&gt;Mainへのマージ
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;リモートリポジトリの mainブランチから、ローカルリポジトリの mainブランチに &lt;code&gt;pull&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;ローカル上でブランチを切ってマージ、コンフリクト解消&lt;/li&gt;
&lt;li&gt;コンフリクトがない状態のブランチをリモートリポジトリに &lt;code&gt;push&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;GitHub上で pull request からマージ&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git merge &amp;lt;マージしたいブランチ&amp;gt; &amp;lt;マージ先のメインブランチ&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ex: git merge feature/user_login main
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git log # コミットIDを調べる
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git reset --hard &amp;lt;commid ID&amp;gt; # 指定したコミットの状態に戻す リセットした記録は残らない
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# デフォルトでは --mixed が選択されてるらしい。要調査
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git revert &amp;lt;commit ID&amp;gt; # 特定のコミットを打ち消すコミットを作成する → 打ち消したコミットより後のコミットには影響しない
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;ブランチの削除&#34;&gt;ブランチの削除
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git checkout main # マージされたブランチを削除するために、一度別のブランチに切り替える
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git branch -d &amp;lt;branch_name&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	git branch -d feature/change
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		# ブランチの削除
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git fetch -p # リモートリポジトリのブランチの状態を取得
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# git commit の履歴を見る
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;空のディレクトリもpushしたい&#34;&gt;空のディレクトリもpushしたい
&lt;/h3&gt;&lt;p&gt;gitの仕様として、ファイルのみを追跡管理するらしい&lt;/p&gt;
&lt;p&gt;ディレクトリ配下に .gitkeep などの名前で空ファイルを作成する&lt;/p&gt;
&lt;h3 id=&#34;リモートリポジトリとの接続を切りたい&#34;&gt;リモートリポジトリとの接続を切りたい
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# リモートリポジトリアドレスを表示
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git remote -v
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 紐づけを解除
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git remote remove [remote_repository_name]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;やる気が出たらmarkdownの書き方勉強してもっと見やすくする&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
